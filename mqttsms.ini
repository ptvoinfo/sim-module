[General]
log=/var/log/mqttsms.log
;log=mqttsms.log
; 0 - disabled, 1 - DEBUG, 2 - INFO, 3 - WARNING, 4 - ERROR, 5- CRITICAL
loglevel=1
consoleloglevel=1

[MQTT]
server: 192.168.1.13
port: 1883
username:
password:
qos=1
retain=1

; a last part in the topic name must be a phone number, the payload is SMS message text
; e.g. My SMS Text ==> home/sim900/sms_out/18001110000
topic_sms_send = home/sim900/sms_out

; you may use the {smsFrom} placeholder
; e.g. topic_recv = home/sim900/sms_in/{smsFrom}
topic_sms_recv = home/sim900/sms_in

; if you want to execute a USSD request you must write a USSD command to ...../ussd/{your path}
; e.g. #100# ==> home/sim900/ussd/command1
; any result will be returned to ..../ussd/{your path}/result
; e.g. home/sim900/ussd/command1/result
; if you want to get a SIM card balance you must write a USSD command to ...../ussd/{your path}/balance
; e.g. #100# ==> home/sim900/ussd/command1/balance
; extracted values will be returned to ..../ussd/{your path}/balance/value
; e.g. home/sim900/ussd/command1/balance/value
topic_ussd = home/sim900/ussd

[GSM]
com=/dev/ttyS5
;com=\\.\COM20
baud=115200

; the semicolon seperated list of allowed senders for incoming SMS messages
whitelist=79101807833

; if the password is defined then all incoming SMS messages must contain this password
password=12345

[SystemPattern]
; this pattern extracts a balance value from a USSD response
balance=(\d[\d\.\,]+)
; pattern extracts a password from an incoming SMS message
password=Pass:([^ ]+)

; if a received message contains a pattern below then the server will extract values from this SMS
; using a regular expression to group1, group2, group3, group4, group5 and also all named groups
; later you may use these values in a topic name "topic_sms_recv" or a custom defined topic name 
; in "TopicForPattern" below
; only first matched pattern will be used
[UserPattern]
; enable_switch_1=\[([A-Za-z]+):(?P<value>\d+)\]

[TopicForPattern]
; enable_switch_1=home/{pattern}/{group1}/state